"use strict";importScripts("fraction.min.js"),importScripts("ava.js"),importScripts("model.js");var SimWorker;!function(e){var r=function(){function e(){}return e.prototype.expandModel=function(e){var r=new Ava.Stp,t={},i={},o=[];t[e.stp.id]=r.getRootDevice(),i[e.stp.id]=r.getRootService();for(var n=0,s=e.devices;n<s.length;n++){var a=s[n],p=r.newDevice(a.ava);t[a.id]=p,o[p.id()]=a.id;for(var v=0,c=a.services;v<c.length;v++){var d=c[v];i[d.id]=p.newService(d.name,d.capacity)}}for(var l=0,f=e.links;l<f.length;l++){var u=f[l];u.type===Model.LinkType.Device?t[u.from].link(t[u.to]):u.type===Model.LinkType.Service&&i[u.from].addChild(i[u.to])}return{stp:r,deviceIdMap:o}},e.prototype.run=function(e,r){var t=this.expandModel(e),i=t.stp.calculate(r),o=i.singlePointsOfFailure.map(function(e){return t.deviceIdMap[e]});return new Model.SimResult(i.availability,o,i.error)},e}();e.Worker=r}(SimWorker||(SimWorker={}));var simWorker=new SimWorker.Worker;self.addEventListener("message",function(e){postMessage({event:"start"});var r=JSON.parse(e.data,Model.inflater),t=simWorker.run(r,function(e,r){var t=Math.floor(100*e/r);t>0&&postMessage({event:"progress",progress:t})});postMessage({event:"progress",progress:100}),postMessage({event:"done",result:JSON.stringify(t)})},!1);