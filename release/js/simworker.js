"use strict";importScripts("ava.js"),importScripts("model.js");var SimWorker;!function(e){var r=function(){return function(e,r){this.stp=e,this.deviceIdMap=r}}(),t=function(){function e(){}return e.prototype.expandModel=function(e){var t=new Ava.Stp,i={},n={},o=[];i[e.stp.id]=t.getRootDevice(),n[e.stp.id]=t.getRootService();for(var s=0,a=e.devices;s<a.length;s++){var d=a[s],p=t.newDevice(d.ava,d.selfRedundant);i[d.id]=p,o[p.id()]=d.id;for(var v=0,c=d.services;v<c.length;v++){var l=c[v];n[l.id]=p.newService(l.name,l.capacity)}}for(var u=0,f=e.links;u<f.length;u++){var m=f[u];m.type===Model.LinkType.Device?i[m.from].link(i[m.to]):m.type===Model.LinkType.Service&&n[m.from].addChild(n[m.to])}return new r(t,o)},e.prototype.run=function(e,r,t,i){var n=this.expandModel(e),o=n.stp.calculate(r,t,i),s=o.singlePointsOfFailure.map(function(e){return n.deviceIdMap[e]});return new Model.SimResult(o.availability,s,o.error)},e}();e.Worker=t}(SimWorker||(SimWorker={}));var simWorker=new SimWorker.Worker;self.addEventListener("message",function(e){postMessage({event:"start"});var r=JSON.parse(e.data.model,Model.inflater),t=simWorker.run(r,e.data.numThreads,e.data.thisThreadNumber,function(e,r){var t=Math.floor(100*e/r);t>0&&postMessage({event:"progress",progress:t})});postMessage({event:"progress",progress:100}),postMessage({event:"done",result:JSON.stringify(t)})},!1);